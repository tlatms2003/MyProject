#include "DHT.h"

#include <ESP8266WiFi.h>

#include <ESP8266HTTPClient.h>

#define DHTPIN 4     // NodeMCU D2 Pin 
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// WiFi credentials.

const char* WIFI_SSID = "접속할 SSID 이름";
const char* WIFI_PASS = "와이파이 비번";
WiFiClientSecure wifiClient;

void connect() {
  // Connect to Wifi.
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(WIFI_SSID);

  WiFi.mode(WIFI_OFF);
  delay(1000);
  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_SSID, WIFI_PASS);

  unsigned long wifiConnectStart = millis();

  while (WiFi.status() != WL_CONNECTED) {
    // Check to see if
    if (WiFi.status() == WL_CONNECT_FAILED) {
      Serial.println("Failed to connect to WIFI. Please verify credentials");
    }

    delay(500);
    Serial.println("...");
    // Only try for 5 seconds.
    if (millis() - wifiConnectStart > 10000) {
      Serial.println("Failed to connect to WiFi");
      Serial.println("Please attempt to send updated configuration parameters.");
      return;
    }
  }

  Serial.println();
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
}

void report(float humidity, float tempC ) {
  HTTPClient http;    //Declare object of class HTTPClient

  http.begin("http://192.168.0.150:8000/set_temp");  //Specify request destination
 
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");  //Specify content-type header

  //Post Data
  String postData = "temp=" + String(tempC) + "&hum=" + String(humidity) ;
  int httpCode = http.POST(postData);   //Send the request
  String payload = http.getString();                  //Get the response payload
  Serial.println(httpCode);   //Print HTTP return code
  Serial.println(payload);    //Print request response payloa
  http.end();  //Close connection
  Serial.println("Reported!");
}

void setup()
{
  Serial.begin(9600);
  Serial.println();
}

void loop()
{
  bool toReconnect = false;

  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Disconnected from WiFi");
    toReconnect = true;
  }

  if (toReconnect) {
    connect();
  }

  delay(3000);

  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  report(humidity, temperature);
  Serial.print("\tHumidity : ");
  Serial.print(humidity, 1);
  Serial.print("\t\tTemp : ");
  Serial.print(temperature, 1);
  Serial.print("\t\t");
  int delaySecond = 1000 * 60 * 5;
  delay(delaySecond);
}